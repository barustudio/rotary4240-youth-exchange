---
import { ViewTransitions } from 'astro:transitions';
import type { MetaData } from '../types';
import '../styles/global.css';
import '../styles/transitions.css';
import Metadata from '../components/head/Metadata.astro';
import Favicons from '../components/head/Favicons.astro';
import Analytics from '../components/head/Analytics.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
  metadata?: MetaData;
}

const { metadata } = Astro.props;

const rawTitle = metadata?.title || "Intercambios Juveniles";

const metadataWithDefaults = {
  description: "Intercambios juveniles de Rotary en Costa Rica, El Salvador, Nicaragua y Panam√°",
  ...metadata,
  title: `${rawTitle} | Rotary D4240`,
};
---

<!doctype html>
<html lang="en" x-data="{ darkMode: localStorage.getItem('darkMode') === 'true' }" x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))" :class="{ 'dark': darkMode }">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <Favicons />
    <Metadata {...metadataWithDefaults} />

    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Lexend:wght@400;500;600;700&display=swap" rel="stylesheet">

    <Analytics />

    <ViewTransitions />
  </head>
  <body class="antialiased bg-white dark:bg-secondary-950 text-secondary-900 dark:text-secondary-100 transition-colors duration-300">

    <div id="page-wrapper" class="page-transition-wrapper min-h-screen flex flex-col justify-between">
      <Header />

      <main class="flex-grow">
        <slot />
      </main>

      <Footer />
    </div>

    <script>
      // Check for user preference
      if (localStorage.getItem('darkMode') === null) {
        // Check system preference
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          localStorage.setItem('darkMode', 'true');
          document.documentElement.classList.add('dark');
        } else {
          localStorage.setItem('darkMode', 'false');
        }
      }

      // Handle page transitions
      document.addEventListener('astro:page-load', () => {
        // This runs on initial page load and after each navigation
        const pageWrapper = document.getElementById('page-wrapper');
        if (pageWrapper) {
          pageWrapper.classList.add('page-loaded');
        }
      });

      document.addEventListener('astro:before-swap', () => {
        // This runs before the new page content is swapped in
        const pageWrapper = document.getElementById('page-wrapper');
        if (pageWrapper) {
          pageWrapper.classList.remove('page-loaded');
        }
      });
    </script>

    <script src="../scripts/transitions.js"></script>

  </body>
</html>
