---
import { getCollection, type CollectionEntry } from 'astro:content';

import Layout from '../../../layouts/Layout.astro';
import HeroSection from '../../../components/HeroSection.astro';

function slugify(str: string) {
  return str.toLowerCase().replace(/\s+/g, '-');
}

export async function getStaticPaths() {
  const posts = await getCollection('noticias');
  const categories = [...new Set(posts.map(p => p.data.category))];

  return categories.map(category => ({
    params: { categoria: slugify(category) },
    props: { category }
  }));
}

interface Props {
  category: string;
}

const { category } = Astro.props as Props;
const { categoria } = Astro.params;
const allPosts: CollectionEntry<'noticias'>[] = await getCollection('noticias');
const posts = allPosts.filter(post => slugify(post.data.category) === categoria);
const categories = [...new Set(allPosts.map(p => p.data.category))];
---

<Layout>
  <main>
    <HeroSection
      title={`Noticias sobre ${category}`}
      highlightText="Noticias"
      description="Mantente al día con las novedades del distrito."
    />

    <div class="container-custom pb-12">
      <div class="flex flex-wrap gap-4 justify-center mb-12">
        <a href="/noticias" class="px-4 py-2 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 font-medium text-sm hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
          Todas las noticias
        </a>
        {categories.map(cat => (
          <a
            href={'/noticias/sobre/' + slugify(cat)}
            class={
              'px-4 py-2 rounded-full font-medium text-sm transition-colors ' +
              (slugify(cat) === categoria
                ? 'bg-primary-600 text-white hover:bg-primary-700'
                : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700')
            }
          >
            {cat}
          </a>
        ))}
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {posts.map((post, index) => (
          <div class="card border border-gray-200 dark:border-gray-700 overflow-hidden slide-up" style={'animation-delay: ' + (index * 100) + 'ms'}>
            <a href={'/noticias/' + post.slug} class="block">
              <img
                src={post.data.image}
                alt={post.data.title}
                class="w-full h-48 object-cover"
                loading="lazy"
              />
            </a>
            <div class="p-6">
              <div class="flex items-center mb-4">
                <span class="text-sm font-medium text-primary-600 dark:text-primary-400">{post.data.category}</span>
                <span class="mx-2 text-gray-300 dark:text-gray-600">•</span>
                <span class="text-sm text-gray-500 dark:text-gray-400">{post.data.date}</span>
              </div>
              <a href={'/noticias/' + post.slug} class="block mb-3">
                <h2 class="text-xl font-semibold text-gray-900 dark:text-white hover:text-primary-600 dark:hover:text-primary-400 transition-colors">{post.data.title}</h2>
              </a>
              <p class="text-gray-600 dark:text-gray-300 mb-6">{post.data.excerpt}</p>
              <div class="flex items-center">
                <img
                  src={post.data.authorAvatar}
                  alt={post.data.author}
                  class="w-10 h-10 rounded-full mr-3 object-cover"
                  loading="lazy"
                />
                <div>
                  <p class="font-medium text-gray-900 dark:text-white">{post.data.author}</p>
                  <p class="text-sm text-gray-500 dark:text-gray-400">{post.data.authorRole}</p>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </main>
</Layout>
