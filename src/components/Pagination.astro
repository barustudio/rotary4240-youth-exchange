---
interface Props {
  currentPage: number;
  lastPage: number;
  url: {
    current: string;
    prev?: string;
    next?: string;
    first?: string;
    last?: string;
  };
  baseUrl?: string; // Base URL for page links, defaults to current page pattern
}

const { currentPage, lastPage, url, baseUrl } = Astro.props as Props;

// Generate page URLs - if baseUrl is provided, use it, otherwise infer from current URL
const generatePageUrl = (pageNum: number): string => {
  if (baseUrl) {
    return pageNum === 1 ? baseUrl : `${baseUrl}/p/${pageNum}`;
  }
  // Default: assume we're in a /noticias structure
  return pageNum === 1 ? '/noticias' : `/noticias/p/${pageNum}`;
};
---

{lastPage > 1 && (
  <div class="mt-12 flex justify-center">
    <nav class="flex items-center space-x-2" aria-label="Pagination">
      {/* Previous Button */}
      {url.prev ? (
        <a
          href={url.prev}
          class="flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-l-md hover:bg-gray-50 dark:bg-gray-800 dark:border-gray-600 dark:text-gray-400 dark:hover:bg-gray-700"
        >
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
          </svg>
          Anterior
        </a>
      ) : (
        <span class="flex items-center px-4 py-2 text-sm font-medium text-gray-300 bg-white border border-gray-300 rounded-l-md cursor-not-allowed dark:bg-gray-800 dark:border-gray-600 dark:text-gray-600">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
          </svg>
          Anterior
        </span>
      )}

      {/* Page Numbers */}
      {Array.from({ length: lastPage }, (_, i) => i + 1).map((pageNum) => {
        const isCurrentPage = pageNum === currentPage;
        const pageUrl = generatePageUrl(pageNum);

        return isCurrentPage ? (
          <span
            class="px-4 py-2 text-sm font-medium text-primary-600 bg-primary-50 border border-primary-300 dark:bg-primary-900 dark:border-primary-600 dark:text-primary-400"
          >
            {pageNum}
          </span>
        ) : (
          <a
            href={pageUrl}
            class="px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 hover:bg-gray-50 dark:bg-gray-800 dark:border-gray-600 dark:text-gray-400 dark:hover:bg-gray-700"
          >
            {pageNum}
          </a>
        );
      })}

      {/* Next Button */}
      {url.next ? (
        <a
          href={url.next}
          class="flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-r-md hover:bg-gray-50 dark:bg-gray-800 dark:border-gray-600 dark:text-gray-400 dark:hover:bg-gray-700"
        >
          Siguiente
          <svg class="w-4 h-4 ml-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </a>
      ) : (
        <span class="flex items-center px-4 py-2 text-sm font-medium text-gray-300 bg-white border border-gray-300 rounded-r-md cursor-not-allowed dark:bg-gray-800 dark:border-gray-600 dark:text-gray-600">
          Siguiente
          <svg class="w-4 h-4 ml-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
          </svg>
        </span>
      )}
    </nav>
  </div>
)}