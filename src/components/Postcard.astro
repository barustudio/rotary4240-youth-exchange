---
import type { Testimonial } from '../types';
import { ProgramCode, ProgramTitle } from '../const';
import DistrictNgseLogo from './logos/DistrictNgseLogo.astro';
import DistrictRyeLogo from './logos/DistrictRyeLogo.astro';

import logoRye from '../assets/images/logo-rye.png';
import logoNgse from '../assets/images/logo-ngse.png';

interface Props extends Testimonial {}

const getImage = (programCode: ProgramCode, image?: ImageMetadata): ImageMetadata => {
  if (image) {
    return image;
  }

  return programCode.split('-')[0] === 'rye' ? logoRye : logoNgse;
};

const getPhotoFooter = (testimonial: Testimonial): string => {
  const prefix = testimonial.programCode === ProgramCode.RYE_STEP ? 'Mis' : 'Mi';
  const programName = ProgramTitle[testimonial.programCode as keyof typeof ProgramTitle];
  const title = testimonial.program
  ? testimonial.program
  : `${prefix} ${programName}`;

  const cityString = testimonial.city ? ` en ${testimonial.city}` : '';
  return `${title}${cityString}`;
};

const monthToString = (month: number, short?: boolean): string => {
  const months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];
  return short ? months[month - 1].slice(0, 3).toUpperCase() : months[month - 1];
};

const signatureString = (name: string, country: string): string => {
  return `${name.split(' ')[0]} ${country.toUpperCase()}`;
};

const testimonialData = Astro.props;
const { studentName, homeCountry, country, programCode, year, month, quote, image } = Astro.props;

const ProgramLogo = programCode === ProgramCode.NGSE ? DistrictNgseLogo : DistrictRyeLogo;
---

<div class="transition-transform duration-300 hover:-translate-y-2 hover:shadow-xl">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8 bg-[#f8f5f0] rounded-none shadow-md overflow-hidden h-full relative p-6">
    <!-- Image Section (appears first on mobile) -->
    <div class="md:order-2 h-full flex flex-col justify-center">
      <!-- Photo -->
      <div class="relative flex flex-col items-end justify-center bg-white p-4 shadow-lg">
        <!-- Made in Country Stamp -->
        <div class="absolute top-[-10px] right-[-10px] w-24 h-24">
          <div class="rounded-full border-[3px] border-black/20 p-2 bg-white transform rotate-[12deg] opacity-80">
            <div class="text-center text-[#3a3a3a]">
              <div class="tracking-wider text-xs">FROM</div>
              <div class="text-5xl tracking-wider">{country.toUpperCase()}</div>
            </div>
          </div>
        </div>

        <!-- Image -->
        <div class="w-full" style="aspect-ratio: 3/4;">
          <img
            src={getImage(programCode, image).src}
            alt={`${country} - ${studentName}`}
            class="w-full h-full object-cover"
          />
        </div>

        <!-- Footer -->
        <div class="flex items-center justify-between mt-4 w-full gap-3">
          <ProgramLogo class="block w-1/2 md:hidden" />
          <div class="text-sm text-[#3a3a3a]/70 text-right w-1/2 md:w-full">
            <div class="italic">{getPhotoFooter(testimonialData)}</div>
            <div>{monthToString(month)} {year}</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Text Content Section (appears second on mobile) -->
    <div class="flex flex-col justify-between space-y-4 italic md:order-1">
      <ProgramLogo class="hidden md:block md:w-2/3" />

      <div class="flex flex-col justify-end space-y-4 italic md:order-1">
        <div class="text-[#3a3a3a] font-mono tracking-wide leading-relaxed italic text-sm lg:text-lg xl:text-xs">
          {quote}
        </div>

        <div class="text-[#3a3a3a] font-mono tracking-wide leading-relaxed border-b border-black/20 py-2 mt-1 md:mt-4">
          {signatureString(studentName, homeCountry)}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Add vintage paper texture */
  .bg-[#f8f5f0] {
    background-image:
      linear-gradient(rgba(248, 245, 240, 0.9), rgba(248, 245, 240, 0.9)),
      url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)'/%3E%3C/svg%3E");
  }
</style>
